@mixin centerForce() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin buttonSpecial(
  $color: rgba(29, 161, 242, 1),
  $hover: rgba(29, 161, 242, 1),
  $font-size: 22px,
  $size: 40px
) {
  @include centerForce;
  width: $size;
  height: $size;
  margin-left: 16px;
  border-radius: 50%;
  cursor: pointer;

  svg {
    color: $color;
    padding: 5px;
    box-sizing: content-box;
    font-size: $font-size;
  }

  &:hover {
    background-color: rgba(29, 161, 242, 0.1);

    svg {
      color: $hover;
    }
  }
}

$breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
);

/// Mixin to manage responsive breakpoints
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
      + 'Available breakpoints are: #{map-keys($breakpoints)}.';
  }
}
